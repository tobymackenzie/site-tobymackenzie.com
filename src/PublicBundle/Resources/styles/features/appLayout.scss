$appNavWidth: 13;

%appLayout{
	align-content: stretch;
	display: flex;
	flex: 1 0 auto; //--push logo to bottom
	flex-direction: column;
	justify-content: center;
	margin: auto;
	max-width: 100%;
	width: $shellMainWidth;
	@include mq(map-get($bp, medium)){
		border-style: solid;
		border-top-style: 0;
		border-width: 3px
	}
	@include supportsGrid{
		align-content: center;
		border-style: none;
		display: grid;
		grid-template-areas:
			'appRestart head'
			'appNav main'
			'appNav foot'
		;
		grid-template-columns: minmax(min-content, max-content) minmax(6em, #{$shellMainWidth + 4em});
		grid-template-rows: max-content max-content max-content;
		width: fit-content;
	}
	@include mq('print'){
		display: block; //-# grid / flex was causing cut off content in FF
		min-height: 0; //-# 100vh was cause page break in FF
		width: auto; //-# could result in narrow content
	}
}
%appContainerLayout{
	padding: remFromPx(16);
	//--move above bg
	position: relative;
	z-index: 1;
}
%appFooterLayout{
	@extend %appContainerLayout;
	grid-area: foot;
	order: 5;
}
%appHeaderLayout{
	@extend %appContainerLayout;
	grid-area: head;
	order: 1;
	@include supportsGrid{
		@include supportsSticky{
			position: sticky;
			top: 0;
			z-index: 99;
		}
	}
}
%appMainLayout{
	border-bottom-style: solid;
	border-width: 3px;
	grid-area: main;
	order: 3;
	z-index: 1;
	@include supportsGrid{
		border-left-style: solid;
		border-right-style: solid;
	}
	@include mq('print'){
		border: 0;
	}
}
%appMainFooterLayout, %appMainHeaderLayout{
	@extend %appContainerLayout;
	@include remFallback('padding-bottom', 16px);
	@include remFallback('padding-top', 16px);
}
%appMainFooterLayout{
	border-width: 3px;
	* + &{
		border-top-style: solid;
	}
}
%appNavAreaLayout{
	@extend %appContainerLayout;
	overflow: auto;
	@include supportsGrid{
		justify-self: end;
		margin-right: -3px;
		overflow: visible;
		padding: 0;
		width: calc(6px + 3em);
	}
	@include mq('print'){
		display: none !important;
	}
}
%appNavLayout{
	@extend %appNavAreaLayout;
	border-width: 3px;
	border-bottom-style: solid;
	order: 2;
	z-index: 100;
	@include supportsSticky{
		overflow: auto;
		position: sticky;
		top: 0;
		white-space: nowrap;
	}
	@include supportsGrid{
		align-self: start;
		border: 0;
		grid-area: appNav;
		overflow: visible;
		position: sticky;
		top: calc(3px + 3em);
		white-space: normal;
	}
}
%appNavItemLayout{
	display: inline-block;
	margin-right: 1em;
	@include supportsGridOrSticky{
		z-index: 100;
	}
	@include supportsGrid{
		display: block;
		height: calc(3px + 3em);
		margin: -3px 0 0;
		position: relative;
		width: calc(6px + 3em);
	}
}
%appNavItemActionLayout{
	display: inline-flex;
	align-items: center;
	@include supportsGrid{
		border-style: solid;
		border-width: 3px;
		display: block;
		height: 100%;
		left: 0;
		max-width: 100%;
		overflow: hidden;
		padding: 0.4em 0.5em;
		position: absolute;
		text-align: center;
		text-decoration: none;
		top: 0;
		transition: max-width 0.2s;
		white-space: nowrap;
		&:focus, &:hover{
			max-width: $appNavWidth * 1em;
		}
	}
	//--when we can expand to the left instead of right
	@include supportsGrid(map-get($bp, wide) + $appNavWidth + 1em){
		left: auto;
		right: 0;
	}
}
%appNavItemHashLayout{
	display: none;
}
%appNavItemIconLayout{
	display: inline-block;
	margin-right: 0.6em;
	text-align: center;
	vertical-align: middle;
	width: 1em;
}
%appNavItemTextLayout{
	display: inline-block;
	vertical-align: middle;
	@supports (display: flex){
		white-space: normal;
	}
	@include supportsGrid{
		white-space: inherit;
	}
}
%appNavListLayout{
	display: flex;
	align-items: center;
	list-style: none;
	margin: 0;
	padding: 0;
	@include supportsGrid{
		display: block;
	}
}
%appRestartNavLayout{
	@extend %appNavAreaLayout;
	@extend %appNavItemLayout;
	display: block;
	margin: 0;
	order: 20;
	@include supportsGrid{
		align-self: end;
		grid-area: appRestart;
		margin-right: -3px; //--duplicated from `appNavAreaLayout` because of order
		position: sticky;
		top: 0;
	}
}
%mainItemLayout{
	@extend %appContainerLayout;
	border-width: 3px;
	* + &{
		border-top-style: solid;
	}
	@include mq(map-get($bp, small)){
		padding: remFromPx(32) remFromPx(16);
	}
	@include mq(map-get($bp, medium)){
		padding: remFromPx(32);
	}
}
%mainItemContentLayout{
	@extend %block;
	* + &{
		@include remFallback('margin-top', 25);
	}
}
%mainItemHeaderLayout{
	@extend %block;
	> h1, > h2{
		margin: 0;
	}
}
%mainItemMetaLayout{
	> *{
		display: inline-block;
		margin-right: 1em;
	}
}
